PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX cr: <http://cr.eionet.europa.eu/ontologies/contreg.rdf#>
PREFIX aq: <http://rdfdata.eionet.europa.eu/airquality/ontology/>
PREFIX aqr: <http://reference.eionet.europa.eu/aq/ontology/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX aqdd: <http://dd.eionet.europa.eu/property/>
PREFIX rod: <http://rod.eionet.europa.eu/schema.rdf#> 

SELECT DISTINCT

md5(concat(?Country, xsd:string(?ReportingYear),xsd:string(?AttainmentYear),?Namespace ,?ScenariosId ,?VersionId ,?CodeOfScenario,?BaselineDescription, ?BaselineComment,  xsd:string(?BaselineEmissions) ,xsd:string(?BaselineExpectedConcentration), ?ProjectionDescription, ?ProjectionComment,  xsd:string(?ProjectionEmissions), xsd:string(?ProjectionExpectedConcentration) ,?SourceApportionmentId ,?PlanId ,?envelope
)
)  as ?_id

#?scenariosXMLURI 
#bif:concat(xsd:string(YEAR(?endOfPeriod)), '-', ?ScenariosId ) as ?_id
?Country as ?CountryOrTerritory 
?ReportingYear 
?AttainmentYear 
?Namespace 
?ScenariosId 
?VersionId 
?CodeOfScenario 
?BaselineDescription 
?BaselineComment 
?BaselineEmissions 
?BaselineExpectedConcentration 
?ProjectionDescription 
?ProjectionComment 
?ProjectionEmissions 
?ProjectionExpectedConcentration 
?SourceApportionmentId 
?PlanId 
?envelope


 WHERE {

{
SELECT DISTINCT 
?Country 
(YEAR(xsd:date(?endOfPeriod)) AS ?ReportingYear)
?ScenariosId
(max(?released) AS ?released) 

WHERE {
?envelope rod:released ?released ;
          rod:endOfPeriod ?endOfPeriod ;
          rod:obligation <http://rod.eionet.europa.eu/obligations/682> ; 
          rod:hasFile ?source ;
          rod:locality ?locality .

?locality rod:localityName ?Country .

{SELECT 
?scenariosXMLURI
?ScenariosId 
(IRI(substr(str(?scenariosXMLURI),1,bif:strchr(str(?scenariosXMLURI),"#"))) AS ?source) 

WHERE {
?scenariosXMLURI a aq:AQD_EvaluationScenario ;
              aq:inspireId ?inspireURI .
?inspireURI aq:localId ?ScenariosId .
}
}
}
}

{
SELECT DISTINCT 
?Country 
(YEAR(xsd:date(?endOfPeriod)) AS ?ReportingYear)
?scenariosXMLURI
?ScenariosId
?released
?envelope

WHERE {
?envelope rod:released ?released ;
          rod:endOfPeriod ?endOfPeriod ;
          rod:obligation <http://rod.eionet.europa.eu/obligations/682> ; 
          rod:hasFile ?source ;
          rod:locality ?locality .

?locality rod:localityName ?Country .

{SELECT 
?scenariosXMLURI
?ScenariosId 
(IRI(substr(str(?scenariosXMLURI),1,bif:strchr(str(?scenariosXMLURI),"#"))) AS ?source) 

WHERE {
?scenariosXMLURI a aq:AQD_EvaluationScenario  ;
              aq:inspireId ?inspireURI .
?inspireURI aq:localId ?ScenariosId .
}
}
}
}


   ?scenariosXMLURI a aq:AQD_EvaluationScenario ;
                      aq:inspireId ?inspireURI . 


?inspireURI aq:localId ?ScenariosId ;
            aq:namespace ?Namespace .

OPTIONAL {?scenariosXMLURI aq:versionId ?VersionId} .

OPTIONAL {?scenariosXMLURI aq:attainmentYear ?attyearURI} . 
OPTIONAL {?scenariosXMLURI aq:codeOfScenario ?CodeOfScenario} . 
OPTIONAL {?scenariosXMLURI aq:sourceApportionment ?SourceApportionmentId} . 
OPTIONAL {?scenariosXMLURI aq:usedInPlan ?PlanId} .   
OPTIONAL {?scenariosXMLURI aq:baselineScenario ?baselineURI} . 
OPTIONAL {?scenariosXMLURI aq:projectionScenario ?projectionURI} . 
OPTIONAL {?scenariosXMLURI aq:publication ?publicationURI} .  

OPTIONAL {?baselineURI aq:description ?BaselineDescription} .
OPTIONAL {?baselineURI aq:comment ?BaselineComment} .
OPTIONAL {?baselineURI aq:totalEmissions ?BaselineEmissions} .
OPTIONAL {?baselineURI aq:expectedConcentration ?BaselineExpectedConcentration} .
##OPTIONAL {?baselineURI aq:measuresApplied ?BaselineMeasuresApplied} .

OPTIONAL {?projectionURI aq:description ?ProjectionDescription} .
OPTIONAL {?projectionURI aq:comment ?ProjectionComment} .
OPTIONAL {?projectionURI aq:totalEmissions ?ProjectionEmissions} .
OPTIONAL {?projectionURI aq:expectedConcentration ?ProjectionExpectedConcentration} .
##OPTIONAL {?projectionURI aq:measuresApplied ?ProjectionMeasuresApplied} .


OPTIONAL {?attyearURI rdfs:label ?AttainmentYear} .


#FILTER regex(?Country,"United Kingdom") .
   
}
